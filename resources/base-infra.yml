Parameters:
  stage:
    Type: String
    Default: 'dev'
  sampleenvironment:
    Type: String
    Description: The environment to be used for cloudformation template
  BastionImageId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-ebs
  BastionKeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: EC2 key used to connect to the bastion host
  IpRange:
    Type: String
Resources:
  SampleVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Join 
        - ''
        - - !Ref IpRange
          - 0.0.0/16
      EnableDnsHostnames: 'True'
      Tags:
      - Key: Name
        Value:  "SampleVPC"
  SampleInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value:  "SampleInternetGateway"
  SamplePublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref SampleVPC
      Tags:
      - Key: Name
        Value:  "SamplePublicRouteTable"
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref SampleVPC
      InternetGatewayId: !Ref SampleInternetGateway
  SampleVPCSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: "SampleVPCSecurityGroup"
      GroupDescription: EC2 Security Group for instances launched in the VPC by Batch
      VpcId: !Ref SampleVPC
      SecurityGroupIngress: 
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 0
          ToPort: 65535
  SampleVPCPublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !Join 
        - ''
        - - !Ref IpRange
          - 0.1.0/24
      VpcId: !Ref SampleVPC
      MapPublicIpOnLaunch: 'True'
      Tags:
      - Key: Name
        Value: "SampleVPCPublicSubnet"
  SampleVPCPrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !Join 
        - ''
        - - !Ref IpRange
          - 0.2.0/24
      VpcId: !Ref SampleVPC
      MapPublicIpOnLaunch: 'False'
      Tags:
      - Key: Name
        Value: "SampleVPCPrivateSubnet"
  SamplePublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref SamplePublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SampleInternetGateway
  SubnetPublicRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref SamplePublicRouteTable
      SubnetId: !Ref SampleVPCPublicSubnet
  SampleInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: false
      ImageId: !Ref BastionImageId
      InstanceType: t2.nano
      KeyName: !Ref BastionKeyName
      Monitoring: false
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet: 
          - Ref: "SampleVPCSecurityGroup"
        SubnetId: 
          Ref: "SampleVPCPublicSubnet"
      UserData: !Base64 yum install mysql-server --assumeyes
      Tags:
      - Key: Name
        Value: "SampleInstance"
  SampleRDSDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSecurityGroups:
      - Ref: SampleVPCSecurityGroup
      AllocatedStorage: '5'
      DBInstanceClass: db.m1.small
      Engine: MySQL
      MasterUsername: admin
      MasterUserPassword: admin
    DeletionPolicy: Snapshot
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: learn-s3-bucket-vishal
      AccessControl: PublicRead
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteContentAfter1Day
            Status: 'Enabled'
            ExpirationInDays: 1
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders: ['*']
          AllowedMethods: [GET]
          AllowedOrigins: ['*']
          ExposedHeaders: [Date]
          Id: myCORSRuleId1
          MaxAge: '3600'
        - AllowedHeaders: [x-amz-*]
          AllowedMethods: [DELETE]
          AllowedOrigins: ['*']
          ExposedHeaders: [Connection, Server, Date]
          Id: myCORSRuleId2
          MaxAge: '1800'
Outputs:
  BucketName:
    Value: !Ref 'S3Bucket'
    Description: Sample Amazon S3 bucket with CORS enabled.
  VPC:
    Value: !Ref 'SampleVPC'
    Description: Sample Amazon VPC.
  InternetGateway:
    Value: !Ref 'SampleInternetGateway'
    Description: Sample Amazon InternetGateway.
  PublicRouteTable:
    Value: !Ref 'SamplePublicRouteTable'
    Description: Sample Amazon Public RouteTable.
  VPCSecurityGroup:
    Value: !Ref 'SampleVPCSecurityGroup'
    Description: Sample Amazon VPC SecurityGroup.
  VPCPublicSubnet:
    Value: !Ref 'SampleVPCPublicSubnet'
    Description: Sample Amazon VPC PublicSubnet.
  Instance:
    Value: !Ref 'SampleInstance'
    Description: Sample Amazon EC2 Instance.
    